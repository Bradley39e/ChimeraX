# vim: set expandtab shiftwidth=4 softtabstop=4:
 
# === UCSF ChimeraX Copyright ===
# Copyright 2016-2019 Regents of the University of California.
# All rights reserved.  This software provided pursuant to a
# license agreement containing restrictions on its disclosure,
# duplication and use.  For details see:
# http://www.rbvi.ucsf.edu/chimerax/docs/licensing.html
# This notice must be embedded in or attached to all copies,
# including partial copies, of the software or any revisions
# or derivations thereof.
# === UCSF ChimeraX Copyright ===

from __future__ import with_statement
import sys, os
# remove current directory from path, so importing of subprocess will work
# (because subprocess import selectors, and we have a selectors too).
del sys.path[0]

git_info = ["git", "show", "--summary", "--date=iso"]
'''
commit 245c04b9b45ec91a2772fc9d7c89d5ea0cb857af
Merge: e9b4c21 1889ee2
Author: Tom Goddard <goddard@sonic.net>
Date:   2016-01-11 19:04:43 -0800

    Merge branch 'develop' of plato.cgl.ucsf.edu:/usr/local/projects/chimerax/git/chimerax into develop


'''

if len(sys.argv) != 3:
    print("usage: %s topdir version" % sys.argv[0], file=sys.stderr)

directory = sys.argv[1]
version = sys.argv[2]
template = "buildinfo.py.in"
result = "buildinfo.py"

branch = None
commit = None
daytime = None

def extract(file):
    global branch, commit, daytime

    for line in file:
        if line.startswith('branch:'):
            branch = line.split()[-1]
            continue
        if line.startswith('commit'):
            commit = line.split()[-1]
            continue
        if line.startswith('Date:'):
            tokens = line.split()
            #2012-01-31 16:49:23 -0800
            # convert to UTC
            from datetime import datetime, timedelta
            d = datetime.strptime(' '.join(tokens[1:3]),
                                  '%Y-%m-%d %H:%M:%S')
            utfoffset = timedelta(0, int(tokens[3]) * 6 * 6)
            d -= utfoffset	# convert to UTC time
            daytime = d.strftime('%Y-%m-%d %H:%M:%S UTC')
            continue

    if branch is None or commit is None or daytime is None:
        print("unable to find branch, last commit, and/nor date",
              file=sys.stderr)
        raise SystemExit(1)

cf = os.path.join(directory, 'copyright.txt')
with open(cf) as f:
    for line in f.readlines():
        if not line.startswith(("Copyright", "\N{Copyright Sign}")):
            continue
        copyright = (line.strip().replace("Copyright", "\N{Copyright Sign}")
                    + "  All rights reserved.")
        break
    else:
        from datetime import datetime
        copyright = "\N{Copyright Sign} %d" % datetime.today().year

gitinfo = os.path.join(directory, 'last-commit')
if os.path.exists(gitinfo):
    extract(open(gitinfo, 'r'))
else:
    branch = "modified develop"
    import subprocess
    info = subprocess.Popen(git_info, stdout=subprocess.PIPE,
                            universal_newlines=True)
    extract(info.stdout)

with open(template, 'r') as input:
    with open(result, 'w') as output:
        for line in input:
            line = line.replace('VERSION', version)
            line = line.replace('BRANCH', branch)
            line = line.replace('COMMIT', commit)
            line = line.replace('DAYTIME', daytime)
            line = line.replace('COPYRIGHT', copyright)
            output.write(line)
