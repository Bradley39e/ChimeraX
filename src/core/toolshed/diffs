--- __init__.py	2018-04-23 21:55:11.547254700 -0700
+++ __init__.py.save	2018-04-23 16:52:40.941534100 -0700
@@ -201,11 +201,9 @@
 _debug_toolshed = False
 
 
-def _debug(*args, file=None, flush=True, **kw):
+import sys
+def _debug(*args, file=sys.__stderr__, flush=True, **kw):
     if _debug_toolshed:
-        if file is None:
-            import sys
-            file = sys.__stderr__
         print("Toolshed:", *args, file=file, flush=flush, **kw)
 
 
@@ -276,8 +274,7 @@
             rebuild it by scanning Python directories; False otherwise.
         check_remote : boolean
             True to check remote server for updated information;
-            False to ignore remote server;
-            None to use setting from user preferences.
+            False to ignore remote server
         remote_url : str
             URL of the remote toolshed server.
             If set to None, a default URL is used.
@@ -325,10 +322,38 @@
         # Reload the bundle info list
         _debug("loading bundles")
         self.reload(logger, check_remote=check_remote, rebuild_cache=rebuild_cache)
+        _debug("check available/remote: %s/%s" %
+               (check_available, check_remote))
         if check_available and not check_remote:
             # Did not check for available bundles synchronously
-            # so start a thread and do it asynchronously
-            self.async_reload_available(logger)
+            # so start a thread and do it asynchronously if necessary
+            from ..core_settings import settings
+            from datetime import datetime, timedelta
+            now = datetime.now()
+            interval = settings.toolshed_update_interval
+            last_check = settings.toolshed_last_check
+            _debug("now, interval, last_check: %s, %s, %s" %
+                   (now, interval, last_check))
+            if not last_check:
+                need_check = True
+            else:
+                last_check = datetime.strptime(settings.toolshed_last_check,
+                                               "%Y-%m-%dT%H:%M:%S.%f")
+                delta = now - last_check
+                max_delta = timedelta(days=1)
+                if interval == "week":
+                    max_delta = timedelta(days=7)
+                elif interval == "day":
+                    max_delta = timedelta(days=1)
+                elif interval == "month":
+                    max_delta = timedelta(days=30)
+                _debug("%s <? %s" % (delta, max_delta))
+                need_check = delta > max_delta
+            if need_check or True:
+                self.async_reload_available(logger)
+                settings.toolshed_last_check = now.isoformat()
+                _debug("Initiate toolshed check: %s" %
+                       settings.toolshed_last_check)
         _debug("finished loading bundles")
 
     def reload(self, logger, *, session=None, reread_cache=True, rebuild_cache=False,
@@ -344,8 +369,7 @@
             rebuild it by scanning Python directories; False otherwise.
         check_remote : boolean
             True to check remote server for updated information;
-            False to ignore remote server;
-            None to use setting from user preferences.
+            False to ignore remote server
         """
 
         _debug("reload", rebuild_cache, check_remote)
