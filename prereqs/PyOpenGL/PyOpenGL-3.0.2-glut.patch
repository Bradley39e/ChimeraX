--- OpenGL/platform/darwin.py.orig	2012-11-29 20:23:47.000000000 -0800
+++ OpenGL/platform/darwin.py	2012-11-29 20:26:09.000000000 -0800
@@ -42,13 +42,7 @@
     # but it is built into the GL libs.
     GL = GLU = CGL = OpenGL
 
-    # glut shouldn't need to be global, but just in case a dependent library makes
-    # the same assumption GLUT does...
-    GLUT = ctypesloader.loadLibrary(
-        ctypes.cdll,
-        'GLUT', 
-        mode=ctypes.RTLD_GLOBAL 
-    )
+    GLUT = None
 
     # GLE is handled by GLUT under OS X
     GLE = GLUT
--- OpenGL/platform/glx.py.orig	2012-11-29 20:23:53.000000000 -0800
+++ OpenGL/platform/glx.py	2012-11-29 20:25:31.000000000 -0800
@@ -26,29 +26,13 @@
         )
     except OSError, err:
         GLU = None
-    # glut shouldn't need to be global, but just in case a dependent library makes
-    # the same assumption GLUT does...
-    try:
-        GLUT = ctypesloader.loadLibrary(
-            ctypes.cdll,
-            'glut', 
-            mode=ctypes.RTLD_GLOBAL 
-        )
-    except OSError, err:
-        GLUT = None
+    GLUT = None
     # GLX doesn't seem to have its own loadable module?
     GLX = GL
     glXGetProcAddressARB = GL.glXGetProcAddressARB
     glXGetProcAddressARB.restype = ctypes.c_void_p
     getExtensionProcedure = staticmethod( glXGetProcAddressARB )
-    try:
-        GLE = ctypesloader.loadLibrary(
-            ctypes.cdll,
-            'gle', 
-            mode=ctypes.RTLD_GLOBAL 
-        )
-    except OSError, err:
-        GLE = None
+    GLE = None
 
     DEFAULT_FUNCTION_TYPE = staticmethod( ctypes.CFUNCTYPE )
 
--- OpenGL/platform/win32.py.orig	2012-11-29 20:23:58.000000000 -0800
+++ OpenGL/platform/win32.py	2012-11-29 20:26:44.000000000 -0800
@@ -21,27 +21,7 @@
         GLU = None
     
     GLUT = None 
-    for possible in ('glut32','freeglut32','freeglut'):
-        # load first-up of the possible names...
-        try:
-            GLUT = ctypesloader.loadLibrary( 
-                ctypes.windll, possible, mode = ctypes.RTLD_GLOBAL 
-            )
-        except WindowsError, err:
-            GLUT = None
-        else:
-            break
-    del possible 
-    
     GLE = None
-    for libName in ('gle32','opengle32'):
-        try:
-            GLE = ctypesloader.loadLibrary( ctypes.cdll, libName )
-            GLE.FunctionType = ctypes.CFUNCTYPE
-        except WindowsError, err:
-            pass
-        else:
-            break
     
     DEFAULT_FUNCTION_TYPE = staticmethod( ctypes.WINFUNCTYPE )
     # Win32 GLUT uses different types for callbacks and functions...
