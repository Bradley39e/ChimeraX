--- OpenGL/platform/darwin.py.orig	2012-11-29 20:23:47.000000000 -0800
+++ OpenGL/platform/darwin.py	2012-11-29 20:26:09.000000000 -0800
@@ -42,13 +42,7 @@
     # but it is built into the GL libs.
     GL = GLU = CGL = OpenGL
 
-    # glut shouldn't need to be global, but just in case a dependent library makes
-    # the same assumption GLUT does...
-    GLUT = ctypesloader.loadLibrary(
-        ctypes.cdll,
-        'GLUT', 
-        mode=ctypes.RTLD_GLOBAL 
-    )
+    GLUT = None
 
     # GLE is handled by GLUT under OS X
     GLE = GLUT
--- OpenGL/platform/glx.py.orig	2013-05-02 14:59:25.000000000 -0700
+++ OpenGL/platform/glx.py	2013-05-02 15:14:22.000000000 -0700
@@ -23,29 +23,13 @@
         )
     except OSError as err:
         GLU = None
-    # glut shouldn't need to be global, but just in case a dependent library makes
-    # the same assumption GLUT does...
-    try:
-        GLUT = ctypesloader.loadLibrary(
-            ctypes.cdll,
-            'glut', 
-            mode=ctypes.RTLD_GLOBAL 
-        )
-    except OSError as err:
-        GLUT = None
+    GLUT = None
     # GLX doesn't seem to have its own loadable module?
     GLX = GL
     glXGetProcAddressARB = GL.glXGetProcAddressARB
     glXGetProcAddressARB.restype = ctypes.c_void_p
     getExtensionProcedure = staticmethod( glXGetProcAddressARB )
-    try:
-        GLE = ctypesloader.loadLibrary(
-            ctypes.cdll,
-            'gle', 
-            mode=ctypes.RTLD_GLOBAL 
-        )
-    except OSError as err:
-        GLE = None
+    GLE = None
 
     DEFAULT_FUNCTION_TYPE = staticmethod( ctypes.CFUNCTYPE )
 
--- OpenGL/platform/win32.py.orig	2013-05-02 14:59:25.000000000 -0700
+++ OpenGL/platform/win32.py	2013-05-02 15:15:10.000000000 -0700
@@ -33,31 +33,8 @@
         GLU = None
 
     GLUT = None
-    for possible in ('freeglut%s'%(size,),'freeglut', 'glut%s'%(size,)):
-        # Prefer FreeGLUT if the user has installed it, fallback to the included 
-        # GLUT if it is installed
-        try:
-            GLUT = ctypesloader.loadLibrary(
-                ctypes.windll, possible, mode = ctypes.RTLD_GLOBAL
-            )
-        except WindowsError as err:
-            GLUT = None
-        else:
-            break
-    try:
-        del possible
-    except NameError as err:
-        pass
 
     GLE = None
-    for libName in ('opengle%s.%s'%(size,vc,),'gle%s'%(size,)):
-        try:
-            GLE = ctypesloader.loadLibrary( ctypes.cdll, libName )
-            GLE.FunctionType = ctypes.CFUNCTYPE
-        except WindowsError as err:
-            pass
-        else:
-            break
 
     DEFAULT_FUNCTION_TYPE = staticmethod( ctypes.WINFUNCTYPE )
     # Win32 GLUT uses different types for callbacks and functions...
